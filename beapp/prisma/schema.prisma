generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCE
}

enum Role {
  USER
  BOT
}

enum Courses {
  JAVASCRIPT
  PYTHON
  REACTJS
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String       @unique
  username    String?      @unique
  avatar      String?
  userStudyProfile UserStudyProfile?
  chats       Chats[]
}

model UserStudyProfile {
  id       String  @id @default(uuid())
  programmingLanguages Courses
  level    Level   @default(BEGINNER)
  userId   String  @unique
  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userStudyProgress UserStudyProgress[]
}


model UserStudyProgress{
  id  String @id @default(uuid())
  completedModules String[]
  lastCompletedModule  String
  currentModule String  
  upcomingModule String
  userStudyProfileId String
  userStudyProfile UserStudyProfile @relation(fields: [userStudyProfileId], references: [id])
}

model Modules {
  id Int @id @default(autoincrement())
  subjectName String
  moduleName String
  moduleNumber Int
  moduleDescription String
  level String
}



model Chats{
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  messages String[]
  role     Role 
}



//checkpoints
//syllabus for each role (points)

